{"ast":null,"code":"import axios from './axiosConfig';\nconst checkTokenExpiration = () => {\n  const token = localStorage.getItem('token');\n  console.log('Token:', token);\n  return !!token; // Return true if token exists\n};\nconst handleLogin = async (email, password) => {\n  try {\n    const response = await axios.post('/api/login', {\n      email,\n      password\n    });\n    console.log('Response:', response.data);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token); // Store the token\n      window.location.href = '/home'; // Redirect to home page \n    } else {\n      console.error('No token received from the server.');\n    }\n  } catch (error) {\n    throw new Error('Login failed. Please check your credentials and try again.');\n  }\n};\nconst handleLogout = () => {\n  localStorage.removeItem('token');\n  window.location.href = '/auth'; // Redirect to login page\n};\nexport { checkTokenExpiration, handleLogin, handleLogout };","map":{"version":3,"names":["axios","checkTokenExpiration","token","localStorage","getItem","console","log","handleLogin","email","password","response","post","data","setItem","window","location","href","error","Error","handleLogout","removeItem"],"sources":["C:/xampp/htdocs/task/frontend/src/components/authUtils.js"],"sourcesContent":["import axios from './axiosConfig'; \r\nconst checkTokenExpiration = () => {\r\n  const token = localStorage.getItem('token');\r\n  console.log('Token:', token); \r\n  return !!token; // Return true if token exists\r\n};\r\n\r\nconst handleLogin = async (email, password) => {\r\n  try {\r\n    const response = await axios.post('/api/login', { email, password });\r\n    console.log('Response:', response.data);  \r\n    if (response.data.token) {\r\n      localStorage.setItem('token', response.data.token); // Store the token\r\n      window.location.href = '/home'; // Redirect to home page \r\n    } else {\r\n      console.error('No token received from the server.');\r\n    }\r\n  } catch (error) {\r\n    throw new Error('Login failed. Please check your credentials and try again.');\r\n  }\r\n};\r\n\r\nconst handleLogout = () => {\r\n  localStorage.removeItem('token');\r\n  window.location.href = '/auth'; // Redirect to login page\r\n};\r\n\r\nexport { checkTokenExpiration, handleLogin, handleLogout };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,eAAe;AACjC,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EACjC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3CC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,KAAK,CAAC;EAC5B,OAAO,CAAC,CAACA,KAAK,CAAC,CAAC;AAClB,CAAC;AAED,MAAMK,WAAW,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,YAAY,EAAE;MAAEH,KAAK;MAAEC;IAAS,CAAC,CAAC;IACpEJ,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEI,QAAQ,CAACE,IAAI,CAAC;IACvC,IAAIF,QAAQ,CAACE,IAAI,CAACV,KAAK,EAAE;MACvBC,YAAY,CAACU,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACE,IAAI,CAACV,KAAK,CAAC,CAAC,CAAC;MACpDY,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,OAAO,CAAC,CAAC;IAClC,CAAC,MAAM;MACLX,OAAO,CAACY,KAAK,CAAC,oCAAoC,CAAC;IACrD;EACF,CAAC,CAAC,OAAOA,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,4DAA4D,CAAC;EAC/E;AACF,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzBhB,YAAY,CAACiB,UAAU,CAAC,OAAO,CAAC;EAChCN,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,OAAO,CAAC,CAAC;AAClC,CAAC;AAED,SAASf,oBAAoB,EAAEM,WAAW,EAAEY,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}