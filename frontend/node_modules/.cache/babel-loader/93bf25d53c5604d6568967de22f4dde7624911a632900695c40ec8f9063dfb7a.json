{"ast":null,"code":"import axios from 'axios';\nimport Swal from 'sweetalert2';\nconst instance = axios.create({\n  baseURL: 'http://localhost:8000',\n  withCredentials: true\n});\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\ninstance.interceptors.response.use(response => response, error => {\n  if (error.response && error.response.status === 401) {\n    // Token is expired or invalid\n    localStorage.removeItem('token');\n    Swal.fire({\n      icon: 'warning',\n      title: 'Session Expired',\n      text: 'Your session has expired. Please log in again.',\n      confirmButtonText: 'OK'\n    }).then(() => {\n      window.location.href = '/auth'; // Redirect to login page\n    });\n  }\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","Swal","instance","create","baseURL","withCredentials","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","status","removeItem","fire","icon","title","text","confirmButtonText","then","window","location","href","Promise","reject"],"sources":["C:/xampp/htdocs/task/frontend/src/components/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:8000', \r\n    withCredentials: true, \r\n});\r\n\r\ninstance.interceptors.request.use(config => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n\r\n\r\n  return config;\r\n});\r\n\r\ninstance.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    if (error.response && error.response.status === 401) {\r\n      // Token is expired or invalid\r\n      localStorage.removeItem('token');\r\n      Swal.fire({\r\n        icon: 'warning',\r\n        title: 'Session Expired',\r\n        text: 'Your session has expired. Please log in again.',\r\n        confirmButtonText: 'OK'\r\n      }).then(() => {\r\n        window.location.href = '/auth'; // Redirect to login page\r\n      });\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,aAAa;AAE9B,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC1BC,OAAO,EAAE,uBAAuB;EAChCC,eAAe,EAAE;AACrB,CAAC,CAAC;AAEFH,QAAQ,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EAC1C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EAGA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEFP,QAAQ,CAACI,YAAY,CAACS,QAAQ,CAACP,GAAG,CAChCO,QAAQ,IAAIA,QAAQ,EACpBC,KAAK,IAAI;EACP,IAAIA,KAAK,CAACD,QAAQ,IAAIC,KAAK,CAACD,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IACnD;IACAN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCjB,IAAI,CAACkB,IAAI,CAAC;MACRC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,iBAAiB;MACxBC,IAAI,EAAE,gDAAgD;MACtDC,iBAAiB,EAAE;IACrB,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;MACZC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,OAAO,CAAC,CAAC;IAClC,CAAC,CAAC;EACJ;EACA,OAAOC,OAAO,CAACC,MAAM,CAACb,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAed,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}